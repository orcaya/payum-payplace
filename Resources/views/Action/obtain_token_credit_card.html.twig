<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Kreditkarten-Zahlung{% endblock %}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .payment-container {
            max-width: 500px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .payment-header {
            text-align: center;
            margin-bottom: 30px;
        }
        .payment-form {
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-row {
            display: flex;
            gap: 15px;
        }
        .form-row .form-group {
            flex: 1;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #333;
        }
        .iframe-field {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 8px;
            min-height: 40px;
            background-color: #fafafa;
            position: relative;
        }
        .iframe-field.ifs-focused {
            border-color: #2196F3;
            box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
        }
        .iframe-field.ifs-valid {
            border-color: #4CAF50;
        }
        .iframe-field.ifs-invalid {
            border-color: #f44336;
        }
        .submit-section {
            text-align: center;
            margin-top: 30px;
        }
        #submitButton {
            background-color: #2196F3;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            min-width: 200px;
        }
        #submitButton:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        #submitButton:not(:disabled):hover {
            background-color: #1976D2;
        }
        .error-message {
            color: #d32f2f;
            background-color: #ffebee;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
            border-left: 4px solid #d32f2f;
        }
        .info-message {
            color: #1976d2;
            background-color: #e3f2fd;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
            border-left: 4px solid #1976d2;
        }
        .hidden {
            display: none;
        }
        #cardImage {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            width: 32px;
            height: 20px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }
        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }
        .payment-method-info {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            border-left: 4px solid #2196F3;
        }
        .payment-method-info h3 {
            margin: 0 0 10px 0;
            color: #2196F3;
        }
        .payment-method-info p {
            margin: 0;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="payment-container">
        <div class="payment-header">
            {% block header %}
            <h2>üí≥ Kreditkarten-Zahlung</h2>
            <p>Sichere Zahlung mit 3D-Secure 2.0</p>
            {% endblock %}
        </div>

        {% if model.posherr is defined and model.posherr != '0' %}
        <div class="error-message">
            <strong>Fehler:</strong> {{ model.rmsg|default('Ein Fehler ist aufgetreten') }}
        </div>
        {% endif %}

        <div class="payment-method-info">
            <h3>Kreditkarte</h3>
            <p>Visa, Mastercard, American Express und weitere Karten werden akzeptiert.</p>
        </div>

        <div class="info-message">
            <strong>Sicher:</strong> Ihre Kreditkartendaten werden verschl√ºsselt direkt an Payplace √ºbertragen.
        </div>

        <!-- Kreditkarten-Formular -->
        <form id="creditCardForm" class="payment-form">
            <div class="form-group">
                <label for="iframeCardholder">Karteninhaber</label>
                <div id="iframeCardholder" class="iframe-field"></div>
            </div>
            
            <div class="form-group">
                <label for="iframePan">Kartennummer</label>
                <div id="iframePan" class="iframe-field">
                    <div id="cardImage"></div>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="iframeExpiry">G√ºltig bis (MM/JJ)</label>
                    <div id="iframeExpiry" class="iframe-field"></div>
                </div>
                <div class="form-group">
                    <label for="iframeCvc">Kartenpr√ºfnummer</label>
                    <div id="iframeCvc" class="iframe-field"></div>
                </div>
            </div>
        </form>

        <div class="submit-section">
            <button id="submitButton" type="button" disabled>üí≥ Zahlung durchf√ºhren</button>
        </div>

        <!-- Hidden form f√ºr Token-√úbertragung -->
        <form id="tokenForm" method="post" action="{{ actionUrl }}" style="display: none;">
            <input type="hidden" name="token" id="token-field">
            <input type="hidden" name="payment_method" value="creditcard">
            <input type="hidden" name="payment_type" id="payment-type-field">
            <input type="hidden" name="card_brand" id="card-brand-field">
        </form>

        <div id="loading" class="loading hidden">
            <p>Kreditkarten-Zahlung wird verarbeitet...</p>
        </div>
    </div>

    <!-- Payplace integration.js laden -->
    <script>
        // Debug-Modus f√ºr bessere Fehlerdiagnose
        const DEBUG = true;
        
        function debugLog(message, data = null) {
            if (DEBUG) {
                console.log('[Payplace Debug]', message, data || '');
            }
        }

        // Globale Variable f√ºr die iframe-Instanz
        let creditCardInstance = null;

        // Dynamisch integration.js laden
        function loadPayplaceScript() {
            debugLog('Loading Payplace script...');
            const script = document.createElement('script');
            const baseUrl = {{ model.sandbox|default(true) ? 'true' : 'false' }} ? 
                'https://testsystem.payplace.de' : 
                'https://system.payplace.de';
            script.src = baseUrl + '/web-ifs/assets/1.2/integration.js';
            script.onload = function() {
                debugLog('Payplace script loaded successfully');
                initializePayplace();
            };
            script.onerror = function() {
                debugLog('Error loading Payplace script');
                document.getElementById('loading').innerHTML = '<div class="error-message">Fehler beim Laden des Payplace-Skripts</div>';
                document.getElementById('loading').classList.remove('hidden');
            };
            document.head.appendChild(script);
        }

        // Payplace Kreditkarten-Integration initialisieren
        function initializePayplace() {
            debugLog('Initializing Payplace...');
            
            const clientSession = '{{ model.clientSession|default('') }}';
            const clientConfiguration = '{{ model.clientConfiguration|default('') }}';
            
            debugLog('Client session:', clientSession);
            debugLog('Client configuration:', clientConfiguration);
            
            if (!clientSession || !clientConfiguration) {
                debugLog('Error: Missing clientSession or clientConfiguration');
                document.getElementById('loading').innerHTML = '<div class="error-message">Konfigurationsfehler: clientSession oder clientConfiguration fehlt</div>';
                document.getElementById('loading').classList.remove('hidden');
                return;
            }

            // Pr√ºfen ob integration object verf√ºgbar ist
            if (typeof integration === 'undefined') {
                debugLog('Error: integration object not available');
                document.getElementById('loading').innerHTML = '<div class="error-message">Payplace integration object nicht verf√ºgbar</div>';
                document.getElementById('loading').classList.remove('hidden');
                return;
            }

            // DOM-Elemente
            const submitButton = document.getElementById('submitButton');
            const tokenForm = document.getElementById('tokenForm');
            const cardImage = document.getElementById('cardImage');

            // Optionen f√ºr Kreditkartenzahlungen
            const creditCardOptions = {
                clientSession: clientSession,
                clientConfiguration: clientConfiguration,
                type: 'creditCard',
                fields: {
                    holder: {
                        selector: '#iframeCardholder', 
                        placeholder: 'Max Mustermann', 
                        required: true
                    },
                    number: {
                        selector: '#iframePan', 
                        placeholder: '4111 1111 1111 1111'
                    },
                    code: {
                        selector: '#iframeCvc', 
                        placeholder: 'CVV'
                    },
                    expiry: {
                        selector: '#iframeExpiry', 
                        placeholder: 'MM/JJ'
                    }
                },
                acs_window: {
                    width: 700,
                    height: 600
                }
            };

            debugLog('Initializing integration with options:', creditCardOptions);

            // Kreditkarten-Integration initialisieren
            integration.initialize(creditCardOptions).then(function(ifsInstance) {
                debugLog('Integration initialized successfully', ifsInstance);
                creditCardInstance = ifsInstance;

                // Events abonnieren
                ifsInstance.on('submitRequest', function(event) {
                    debugLog('submitRequest event triggered', event);
                    handleSubmitRequest();
                });

                ifsInstance.on('cardBrandChange', function(event) {
                    debugLog('cardBrandChange event', event);
                    cardImage.style.backgroundImage = 'url(data:image/svg+xml;base64,' + getCardIcon(event.type) + ')';
                });

                ifsInstance.on('formValidationChange', function(event) {
                    debugLog('formValidationChange event', event);
                    submitButton.disabled = !event.valid || !event.completed;
                });

                // Weitere Events f√ºr Debugging
                ifsInstance.on('activeStateChange', function(event) {
                    debugLog('activeStateChange event', event);
                });

                ifsInstance.on('ready', function(event) {
                    debugLog('ready event', event);
                });

                // Initial state
                submitButton.disabled = true;
                
            }).catch(function(error) {
                debugLog('Error initializing integration:', error);
                document.getElementById('loading').innerHTML = '<div class="error-message">Fehler bei der Kreditkarten-Initialisierung: ' + error + '</div>';
                document.getElementById('loading').classList.remove('hidden');
            });

            // Submit-Handler Funktion
            function handleSubmitRequest() {
                debugLog('Starting token creation...');
                
                if (!creditCardInstance) {
                    debugLog('Error: creditCardInstance not available');
                    alert('Integration nicht verf√ºgbar');
                    return;
                }

                if (!creditCardInstance.isActive()) {
                    debugLog('Error: integration not active');
                    alert('Integration nicht aktiv');
                    return;
                }

                if (!creditCardInstance.isValid()) {
                    debugLog('Error: form not valid');
                    alert('Formular nicht vollst√§ndig ausgef√ºllt');
                    return;
                }

                document.getElementById('loading').classList.remove('hidden');
                submitButton.disabled = true;

                creditCardInstance.createToken(function(createTokenErr, createTokenResponse) {
                    debugLog('createToken callback', { error: createTokenErr, response: createTokenResponse });
                    
                    if (createTokenErr) {
                        debugLog('Token creation error:', createTokenErr);
                        document.getElementById('loading').classList.add('hidden');
                        submitButton.disabled = false;
                        alert('Fehler bei der Token-Erstellung: ' + createTokenErr);
                        return;
                    }

                    if (!createTokenResponse || !createTokenResponse.token) {
                        debugLog('Invalid token response:', createTokenResponse);
                        document.getElementById('loading').classList.add('hidden');
                        submitButton.disabled = false;
                        alert('Ung√ºltige Antwort von Payplace');
                        return;
                    }

                    // Token-Daten setzen
                    debugLog('Setting token data:', createTokenResponse);
                    document.getElementById('token-field').value = createTokenResponse.token;
                    document.getElementById('payment-type-field').value = createTokenResponse.type || 'creditCard';
                    document.getElementById('card-brand-field').value = (createTokenResponse.info && createTokenResponse.info.brand) || '';

                    debugLog('Submitting form...');
                    // Form absenden
                    tokenForm.submit();
                });
            }

            // Submit-Button Event
            submitButton.addEventListener('click', function() {
                debugLog('Submit button clicked');
                handleSubmitRequest();
            });

            // Card-Icons
            function getCardIcon(brand) {
                const icons = {
                    'visa': 'PHN2ZyB3aWR0aD0iMzIiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjAgMCAzMiAyMCIgZmlsbD0ibm9uZSI+PHJlY3Qgd2lkdGg9IjMyIiBoZWlnaHQ9IjIwIiByeD0iNCIgZmlsbD0iIzAwNTFBNSIvPjx0ZXh0IHg9IjUiIHk9IjEzIiBmb250LXNpemU9IjYiIGZpbGw9IndoaXRlIj5WSVNBPHRleHQ+PC9zdmc+',
                    'mastercard': 'PHN2ZyB3aWR0aD0iMzIiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjAgMCAzMiAyMCIgZmlsbD0ibm9uZSI+PHJlY3Qgd2lkdGg9IjMyIiBoZWlnaHQ9IjIwIiByeD0iNCIgZmlsbD0iI0VCMDAxQiIvPjx0ZXh0IHg9IjIiIHk9IjEzIiBmb250LXNpemU9IjQiIGZpbGw9IndoaXRlIj5NQVNURVJDQVJEPC90ZXh0Pjwvc3ZnPg==',
                    'amex': 'PHN2ZyB3aWR0aD0iMzIiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjAgMCAzMiAyMCIgZmlsbD0ibm9uZSI+PHJlY3Qgd2lkdGg9IjMyIiBoZWlnaHQ9IjIwIiByeD0iNCIgZmlsbD0iIzAwNkZDRiIvPjx0ZXh0IHg9IjUiIHk9IjEzIiBmb250LXNpemU9IjYiIGZpbGw9IndoaXRlIj5BTUVYPC90ZXh0Pjwvc3ZnPg==',
                    'default': 'PHN2ZyB3aWR0aD0iMzIiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjAgMCAzMiAyMCIgZmlsbD0ibm9uZSI+PHJlY3Qgd2lkdGg9IjMyIiBoZWlnaHQ9IjIwIiByeD0iNCIgZmlsbD0iIzY2NiIvPjx0ZXh0IHg9IjMiIHk9IjEzIiBmb250LXNpemU9IjUiIGZpbGw9IndoaXRlIj5DQVJEPC90ZXh0Pjwvc3ZnPg=='
                };
                return icons[brand] || icons.default;
            }
        }

        // Script laden wenn DOM bereit
        document.addEventListener('DOMContentLoaded', function() {
            debugLog('DOM loaded, starting initialization...');
            loadPayplaceScript();
        });
    </script>
</body>
</html> 